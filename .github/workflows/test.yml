name: Test Suite

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Install APT packages
      timeout-minutes: 5
      run: |
        echo "Installing APT packages..."
        sudo apt-get update
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y golang-go default-jdk lua5.3 lua5.3-dev elixir
        echo "APT packages installed successfully"
    
    - name: Setup Scala with Coursier
      uses: coursier/setup-action@v1
      with:
        apps: bloop
    
    - name: Install Rust
      timeout-minutes: 3
      run: |
        echo "Installing Rust..."
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        echo "Rust installed successfully"
    
    - name: Install Terraform
      timeout-minutes: 2
      run: |
        echo "Installing Terraform..."
        wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get update && sudo apt-get install -y terraform
        echo "Terraform installed successfully"
    
    - name: Verify installed tools
      run: |
        echo "Checking installed system tools:"
        which go && go version || echo "Go not found"
        which javac && javac -version || echo "Java not found"
        which rustc && rustc --version || echo "Rust not found" 
        which bloop && echo "Bloop found at $(which bloop)" || echo "Bloop not found"
        which lua5.3 && lua5.3 -v || echo "Lua not found"
        which luac && luac -v || echo "Luac not found"
        which elixir && elixir --version || echo "Elixir not found"
        which terraform && terraform --version || echo "Terraform not found"
    
    - name: Verify local tools installed
      run: |
        echo "Verifying local tools:"
        test -f node_modules/.bin/tsc && echo "✅ TypeScript found locally" || echo "❌ TypeScript not found locally"
        test -f node_modules/.bin/pyright && echo "✅ Pyright found locally" || echo "❌ Pyright not found locally"
        ls -la node_modules/.bin/ | head -20 || echo "node_modules/.bin not found"
    
    - name: Build binaries
      run: bun run build
      
    - name: Verify binary exists
      run: |
        test -f bin/claude-lsp-cli
        echo "✅ Single unified binary built successfully"
    
    - name: Run quality checks
      run: |
        echo "Running linting checks..."
        bun run lint
        
        echo "Running format checks..."
        bun run format:check
        
        echo "Running type checks..."
        bun run typecheck
        
        echo "✅ All quality checks passed!"
      
    - name: Run tests
      run: |
        # PATH already includes Rust and Bloop from previous step
        bun test --timeout 30000
      
    - name: Check test coverage
      run: |
        echo "Running coverage analysis..."
        bun run test:coverage
        
        echo "Test files: $(ls tests/*.test.ts | wc -l)"
        echo "Source files: $(ls src/*.ts | wc -l)"
        echo "Coverage: $(($(ls tests/*.test.ts | wc -l) * 100 / $(ls src/*.ts | wc -l)))%"